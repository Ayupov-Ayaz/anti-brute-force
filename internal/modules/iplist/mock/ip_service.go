// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ayupov-ayaz/anti-brute-force/internal/modules/iplist (interfaces: IPService)

// Package mocks is a generated GoMock package.
package mocks

import (
	net "net"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPService is a mock of IPService interface.
type MockIPService struct {
	ctrl     *gomock.Controller
	recorder *MockIPServiceMockRecorder
}

// MockIPServiceMockRecorder is the mock recorder for MockIPService.
type MockIPServiceMockRecorder struct {
	mock *MockIPService
}

// NewMockIPService creates a new mock instance.
func NewMockIPService(ctrl *gomock.Controller) *MockIPService {
	mock := &MockIPService{ctrl: ctrl}
	mock.recorder = &MockIPServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPService) EXPECT() *MockIPServiceMockRecorder {
	return m.recorder
}

// ParseCIDR mocks base method.
func (m *MockIPService) ParseCIDR(arg0 string) (*net.IPNet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseCIDR", arg0)
	ret0, _ := ret[0].(*net.IPNet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseCIDR indicates an expected call of ParseCIDR.
func (mr *MockIPServiceMockRecorder) ParseCIDR(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseCIDR", reflect.TypeOf((*MockIPService)(nil).ParseCIDR), arg0)
}
